version: '3.9'

services:
  api_gateway:
    build:
      context: ./api_gateway
    depends_on:
      - user_service
      - balance_service
    ports:
      - "1432:8000"  
    networks:
      - app-network
    env_file:
      - ./api_gateway/.env 
    volumes:
      - ./api_gateway/app:/backend/app
  user_service:
    build:
      context: ./user_service
    depends_on:
      - user_db
    ports:
      - "8001:8000"  
    networks:
      - app-network
    env_file:
      - ./user_service/.env  
    restart: always
    volumes:
      - ./user_service/app:/backend/app

  balance_service:
    build:
      context: ./balance_service
    depends_on:
      - balance_db
    ports:
      - "8002:8000"  
    networks:
      - app-network
    env_file:
      - ./balance_service/.env  
    restart: always
    volumes:
      - ./balance_service/app:/backend/app


  user_db:
    image: postgres:17
    volumes:
      - user_pg_data:/var/lib/postgresql/data
    networks:
      - app-network
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB_USERS}
    ports:
    - "5433:5432"

  balance_db:
    image: postgres:17
    volumes:
      - balance_pg_data:/var/lib/postgresql/data
    networks:
      - app-network
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB_BALANCES}
    ports:
    - "5434:5432"

volumes:
  user_pg_data:
  balance_pg_data:

networks:
  app-network:
    driver: bridge
